process {
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 1.GB * task.attempt, 'memory' ) }
  time = { check_max( 10.m * task.attempt, 'time' ) }
  withLabel: index {
    cpus = { check_max( (params.debug ? 1 : 20) * task.attempt, 'cpus' ) }
    memory = { check_max( (params.debug ? 2.GB : 200.GB) * task.attempt, 'memory' ) }
    time = { check_max( (params.debug ? 10.m : 2.h) * task.attempt, 'time' ) }
  }
  withLabel: align {
    cpus = { check_max( (params.debug ? 1 : 2) * task.attempt, 'cpus' ) }
    memory = { check_max( (params.debug ? 2.GB : 50.GB) * task.attempt, 'memory' ) }
    time = { check_max( (params.debug ? 10.m : 2.h) * task.attempt, 'time' ) }
  }
  withLabel: benchmark {
    cpus = { check_max( 2 * task.attempt, 'cpus' ) }
    memory = { check_max( 2.GB * task.attempt, 'memory' ) }
    time = { check_max( (params.debug ? 10.m : 1.h) * task.attempt, 'time' ) }
  }
  withLabel: sort {
    cpus = { check_max( (params.debug ? 1 : 2) * task.attempt, 'cpus' ) }
    memory = { check_max( (params.debug ? 1.GB : 4.GB) * task.attempt, 'memory' ) }
    time = { check_max( (params.debug ? 10.m : 30.m) * task.attempt, 'time' ) }
  }
}

params {
  // Defaults to be overwritten
  max_memory = 128.GB
  max_cpus = 20
  max_time = 48.h
}
