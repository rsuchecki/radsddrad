params {
  //NUMBER OF LINES TO BE PROOCESSED FOR TRIAL PURPOSES, DEFAULT null WILL PROCESS WHOLE DATASETS
  trialLines = null
  debug = false
  outdir = "./results"
  infodir = "./flowinfo"
  publishmode = "copy"
}
//Output publishing conf
includeConfig 'conf/publish.config'
includeConfig 'conf/requirements.config'

process {
  cache = 'lenient'
  // container = 'rsuchecki/tools:0.1' //only need standardi-ish linux toool set: wget, gawk... //replaced by individual containers where applicable
  errorStrategy = params.debug ? 'finish' : 'retry'
  maxRetries = 4
}

profiles {
  standard {
    process.executor = 'local'
  }
  docker {
      docker {
        enabled = true
        fixOwnership = true
    }
    includeConfig 'conf/containers.config'
  }
  awsbatch {
    aws.region = 'ap-southeast-2'
    process {
      executor = 'awsbatch'
      queue = 'flowq'
      container = 'rsuchecki/tools:0.1' //only need standardi-ish linux toool set: wget, gawk... //replaced by individual containers where applicable
    }
    executor {
      awscli = '/home/ec2-user/miniconda/bin/aws'
    }
    includeConfig 'conf/containers.config'
  }
  slurm {
    process {
      executor = 'slurm'
      scratch = true
    }
  }
  singularity {
    singularity {
      enabled = true
      autoMounts = true
      cacheDir = "${HOME}/singularity-images"
    }
    includeConfig 'conf/containers.config'
  }
  singularitymodule {
    process.module = 'singularity/2.5.0' //Specific to our cluster - updated as required
  }

}

//GENERATE REPORT https://www.nextflow.io/docs/latest/tracing.html#trace-report
report {
    enabled = true
    file = "${params.infodir}/report.html"
}

//GENERATE TIMELINE https://www.nextflow.io/docs/latest/tracing.html#timeline-report
timeline {
    enabled = true
    timeline.file = "${params.infodir}/timeline.html"
}

//GENERATE PIPELINE TRACE https://www.nextflow.io/docs/latest/tracing.html#trace-report
trace {
    enabled = true
    raw	= true //date and time are reported as milliseconds and memory as number of bytes
    file = "${params.infodir}/trace.tsv"
}

// //SEND NOTIFICATION EMAIL IF ADDRESS(ES) PROVIDED -- use -N email@.... instead
// notification {
//   enabled = params.email.isEmpty() ? false : true
//   to = params.email
// }

//FROM: https://github.com/SciLifeLab/NGI-smRNAseq/blob/29c41afd45011874ed9920c5065ddff93791e3cf/nextflow.config
// Function to ensure that resource requirements don't go beyond a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    if(obj.compareTo(params.max_memory) == 1)
      return params.max_memory
    else
      return obj
  } else if(type == 'time'){
    if(obj.compareTo(params.max_time) == 1)
      return params.max_time
    else
      return obj
  } else if(type == 'cpus'){
    return Math.min( obj, params.max_cpus )
  }
}


